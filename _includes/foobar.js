// Generated by CoffeeScript 1.4.0
(function() {
  var MyGovLoader,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MyGovLoader = (function() {

    MyGovLoader.prototype.rootUrl = 'http://localhost:4000';

    MyGovLoader.prototype.scrollTrigger = 80;

    MyGovLoader.prototype.widthExpanded = '100%';

    MyGovLoader.prototype.widthMinimized = '20%';

    MyGovLoader.prototype.style = {
      position: 'fixed',
      bottom: 0,
      left: 0,
      background: 'transparent',
      width: '20%',
      display: 'none',
      height: '110px',
      border: 0,
      'z-index': 9999999,
      overflow: 'hidden'
    };

    MyGovLoader.prototype.isLoaded = false;

    MyGovLoader.prototype.id = 'myGovBar';

    MyGovLoader.prototype.el = false;

    function MyGovLoader() {
      this.recieve = __bind(this.recieve, this);

      this.onScroll = __bind(this.onScroll, this);
      this.addEvent(document, 'scroll', this.onScroll);
    }

    MyGovLoader.prototype.addEvent = function(el, event, func) {
      if (el.addEventListener) {
        return el.addEventListener(event, func, false);
      } else if (el.attachEvent) {
        return el.attachEvent("on" + event, func);
      }
    };

    MyGovLoader.prototype.onScroll = function() {
      if (this.offsetBottom() > this.scrollTrigger) {
        return this.show();
      } else {
        return this.hide();
      }
    };

    MyGovLoader.prototype.positionTop = function() {
      return window.pageYOffset || body.scrollTop || html.scrollTop;
    };

    MyGovLoader.prototype.pageHeight = function() {
      return Math.max(Math.max(document.body.scrollHeight, document.documentElement.scrollHeight), Math.max(document.body.offsetHeight, document.documentElement.offsetHeight), Math.max(document.body.clientHeight, document.documentElement.clientHeight));
    };

    MyGovLoader.prototype.windowHeight = function() {
      return window.innerHeight || html.clientHeight || body.clientHeight || screen.availHeight;
    };

    MyGovLoader.prototype.offsetBottom = function() {
      return 100 * (this.positionTop() + this.windowHeight()) / this.pageHeight();
    };

    MyGovLoader.prototype.load = function() {
      var key, value, _ref;
      this.el = document.createElement('iframe');
      this.el.name = this.id;
      this.el.id = this.id;
      this.el.src = this.rootUrl + '/mygov-bar.html#' + encodeURIComponent(document.location.href);
      _ref = this.style;
      for (key in _ref) {
        value = _ref[key];
        this.el.style[key] = value;
      }
      document.body.appendChild(this.el);
      XD.receiveMessage(this.recieve, this.rootUrl);
      return this.isLoaded = true;
    };

    MyGovLoader.prototype.isHidden = function() {
      if (!this.el) {
        return true;
      }
      return this.el.style.display === 'none';
    };

    MyGovLoader.prototype.isShown = function() {
      return !this.isHidden();
    };

    MyGovLoader.prototype.isMinimized = function() {
      return this.el.style.widht === this.widthMinimized;
    };

    MyGovLoader.prototype.setWidth = function(width) {
      return document.getElementById(this.id).style.width = width;
    };

    MyGovLoader.prototype.show = function() {
      if (this.isShown()) {
        return;
      }
      if (!this.isLoaded) {
        this.load();
      }
      this.el.style.display = 'block';
      return this.send('shown');
    };

    MyGovLoader.prototype.hide = function() {
      if (this.isHidden()) {
        return;
      }
      this.el.style.display = 'none';
      return this.send('hidden');
    };

    MyGovLoader.prototype.maximize = function() {
      return this.setWidth(this.widthMaximized);
    };

    MyGovLoader.prototype.minimize = function() {
      return this.setWidth(this.widthMinimized);
    };

    MyGovLoader.prototype.toggleMore = function() {
      if (this.el.style.width === this.widthMinimized) {
        return this.setWidth(this.widthExpanded);
      } else {
        return this.setWidth(this.widthMinimized);
      }
    };

    MyGovLoader.prototype.send = function(msg) {
      var iframe;
      iframe = document.getElementById(this.id);
      return XD.postMessage(msg, iframe.src, frames.myGovBar);
    };

    MyGovLoader.prototype.recieve = function(msg) {
      switch (msg.data) {
        case "toggle":
          return this.toggleMore();
      }
    };

    return MyGovLoader;

  })();

  window.MyGovLoader = new MyGovLoader();

}).call(this);
