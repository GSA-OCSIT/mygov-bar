// Generated by CoffeeScript 1.3.3
(function() {
  var MyGovLoader, loader,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MyGovLoader = (function() {

    function MyGovLoader() {
      this.load = __bind(this.load, this);

    }

    MyGovLoader.prototype.el = 'logo';

    MyGovLoader.prototype.css = ['css/mygov-bar.css'];

    MyGovLoader.prototype.js = ['js/mygov-bar.js'];

    MyGovLoader.prototype.loaded = false;

    MyGovLoader.prototype.init = function() {
      var el;
      el = document.getElementById(this.el);
      el.href = "#";
      if (el.addEventListener) {
        return el.addEventListener('click', this.load, false);
      } else if (el.attachEvent) {
        return el.attachEvent('onclick', this.load);
      }
    };

    MyGovLoader.prototype.loadCSS = function(src) {
      var css;
      css = document.createElement('link');
      css.rel = 'stylesheet';
      css.href = src;
      return document.body.appendChild(css);
    };

    MyGovLoader.prototype.loadJS = function(src) {
      var script;
      script = document.createElement('script');
      script.src = src;
      return document.body.appendChild(script);
    };

    MyGovLoader.prototype.load = function() {
      var src, _i, _j, _len, _len1, _ref, _ref1;
      if (this.loaded) {
        return false;
      }
      _ref = this.css;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        src = _ref[_i];
        this.loadCSS(src);
      }
      _ref1 = this.js;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        src = _ref1[_j];
        this.loadJS(src);
      }
      return this.loaded = true;
    };

    return MyGovLoader;

  })();

  loader = new MyGovLoader;

  loader.init();

}).call(this);
